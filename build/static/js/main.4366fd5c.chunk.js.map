{"version":3,"sources":["components/Organisms/Cards/index.tsx","components/Atoms/Button/index.tsx","firebase.ts","components/Organisms/PostModal/index.tsx","components/Atoms/MoreButton/index.tsx","Img/baby.jpeg","components/Atoms/Img/index.tsx","components/Organisms/Header/index.tsx","components/Pages/Home/index.tsx","components/Organisms/HomeDetailCards/index.tsx","components/Atoms/Reply/index.tsx","components/Organisms/ReplyModal/index.tsx","components/Organisms/ReplyCards/index.tsx","components/Pages/HomeDetailPage/index.tsx","reportWebVitals.ts","App.tsx","index.tsx"],"names":["TitleH2","styled","h2","Body","p","Index","title","body","minDeviceWidth","hoverable","style","width","marginTop","border","maxDeviceWidth","borderBottom","SpPostButton","button","index","props","margin","padding","type","danger","shape","onClick","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","useState","modalVisible","setModalVisible","name","setName","setTitle","setBody","TextArea","Input","H3","h3","doPosts","handleOk","boardContents","createdAt","firestore","Timestamp","now","collection","add","alert","visible","onCancel","footer","onChange","e","target","value","placeholder","required","rows","LogoStyle","img","LogoLocationToHome","a","href","src","Logo","LogoWrapper","div","LogoParagraph","HomeDiv","ButtonWrapper","SpButtonWrapper","bords","setBoards","sliceBoards","setSliceBoards","sliceBoardsArray","useEffect","orderBy","onSnapshot","boards","forEach","contents","push","boardIds","id","contentList","data","length","slice","handleMore","span","map","boardFields","to","Name","Time","time","CurrentYear","toDate","getFullYear","CurrentMonth","getMonth","CurrentDay","getDay","Wrapper","Replay","SendOutlined","db","boardId","ref","console","log","doReply","doc","Reply","HomeDetailCardWrapper","SpHomeDetailCardWrapper","ReplyArea","SpReplyArea","replys","setReplys","match","params","doBoardArray","doReplyArray","res","reply","backgroundColor","replyFields","ReplyCards","exact","path","component","Home","HomeDetailPage","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reportWebVitals","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.4366fd5c.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Card } from \"antd\";\nimport styled from \"styled-components\";\n\nimport MediaQuery from \"react-responsive\";\nconst TitleH2 = styled.h2`\n  color: #fa6868;\n`;\nconst Body = styled.p``;\ntype Props = {\n  title: string;\n  body: string;\n};\n\nconst Index: FC<Props> = ({ title, body }) => {\n  return (\n    //PC担当\n    <>\n      <MediaQuery minDeviceWidth={768}>\n        <Card\n          hoverable\n          style={{ width: 600, marginTop: \"20px\", border: \"1px solid #d2d1d1\" }}\n        >\n          <TitleH2>{title}</TitleH2>\n          <Body>{body}</Body>\n        </Card>\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={767}>\n        <Card\n          hoverable\n          style={{\n            width: \"100%\",\n            borderBottom: \"1px solid #d2d1d1\",\n          }}\n        >\n          <TitleH2>{title}</TitleH2>\n          <Body>{body}</Body>\n        </Card>\n      </MediaQuery>\n    </>\n  );\n};\nexport default Index;\n","import React, { FC } from \"react\";\nimport { Button } from \"antd\";\nimport MediaQuery from \"react-responsive\";\nimport styled from \"styled-components\";\ntype Props = {\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n};\nconst SpPostButton = styled.button`\n  position: fixed;\n  right: 10px;\n  bottom: 20px;\n  z-index: 200;\n  width: 30%;\n  border: 1px solid #fa6868;\n  border-radius: 28px;\n  color: #ffff;\n  background: #fa6868;\n  text-align: center;\n  padding: 20px;\n`;\nconst index: FC<Props> = (props) => {\n  return (\n    <>\n      <MediaQuery minDeviceWidth={768}>\n        <Button\n          style={{\n            margin: \"22px 0 0 20px\",\n            padding: \"20px 10px 40px 10px\",\n          }}\n          type=\"dashed\"\n          danger\n          shape=\"round\"\n          onClick={props.onClick}\n        >\n          質問を投稿する\n        </Button>\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={767}>\n        <SpPostButton onClick={props.onClick}>投稿する</SpPostButton>\n      </MediaQuery>\n    </>\n  );\n};\nexport default index;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst app = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n};\nfirebase.initializeApp(app);\n\nexport default firebase;\n","import React, { useState } from \"react\";\nimport { Modal, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport PostButton from \"../../Atoms/Button\";\nimport firebase from \"../../../firebase\";\nimport MediaQuery from \"react-responsive\";\nexport type firebasePostContents = {\n  name: string;\n  title: string;\n  body: string;\n  createdAt: firebase.firestore.Timestamp;\n};\nexport default function Index() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const { TextArea } = Input;\n  const H3 = styled.h3``;\n  const doPosts = () => {\n    setModalVisible(true);\n  };\n\n  const handleOk = () => {\n    const boardContents: firebasePostContents = {\n      name,\n      title,\n      body,\n      createdAt: firebase.firestore.Timestamp.now(),\n    };\n    if (name && title && body) {\n      firebase.firestore().collection(\"board\").add(boardContents);\n      setModalVisible(false);\n    } else {\n      alert(\"文字を入力してください\");\n    }\n  };\n  return (\n    <div>\n      <MediaQuery minDeviceWidth={768}>\n        <PostButton onClick={doPosts} />\n        <Modal\n          title=\"質問を投稿する\"\n          visible={modalVisible}\n          onCancel={() => setModalVisible(false)}\n          width=\"40%\"\n          footer={[\n            <Button key=\"back\" onClick={() => setModalVisible(false)}>\n              キャンセル\n            </Button>,\n            <Button key=\"submit\" type=\"default\" onClick={handleOk}>\n              投稿する\n            </Button>,\n          ]}\n        >\n          <H3>名前</H3>\n          <Input\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"名前\"\n            required\n          />\n          <H3>タイトル</H3>\n          <Input\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"タイトル\"\n            required\n          />\n          <H3>相談内容</H3>\n          <TextArea\n            onChange={(e) => setBody(e.target.value)}\n            placeholder=\"相談内容\"\n            required\n            rows={4}\n          />\n        </Modal>\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={767}>\n        <PostButton onClick={doPosts} />\n        <Modal\n          title=\"質問を投稿する\"\n          visible={modalVisible}\n          onCancel={() => setModalVisible(false)}\n          width=\"90%\"\n          footer={[\n            <Button key=\"back\" onClick={() => setModalVisible(false)}>\n              キャンセル\n            </Button>,\n            <Button key=\"submit\" type=\"default\" onClick={handleOk}>\n              投稿する\n            </Button>,\n          ]}\n        >\n          <H3>名前</H3>\n          <Input\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"名前\"\n            required\n          />\n          <H3>タイトル</H3>\n          <Input\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"タイトル\"\n            required\n          />\n          <H3>相談内容</H3>\n          <TextArea\n            onChange={(e) => setBody(e.target.value)}\n            placeholder=\"相談内容\"\n            required\n            rows={4}\n          />\n        </Modal>\n      </MediaQuery>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\nexport default function index() {\n  return (\n    <Button danger shape=\"round\">\n      もっと見る\n    </Button>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/baby.b3c0c288.jpeg\";","import React from \"react\";\nimport Logo from \"../../../Img/baby.jpeg\";\nimport styled from \"styled-components\";\n\nconst LogoStyle = styled.img`\n  width: 80px;\n  border-radius: 50%;\n  padding-left: 18px;\n`;\n\nconst LogoLocationToHome = styled.a``;\nexport default function index() {\n  return (\n    <LogoLocationToHome href=\"../\">\n      <LogoStyle src={Logo} />\n    </LogoLocationToHome>\n  );\n}\n","import React from \"react\";\nimport Logo from \"../../Atoms/Img\";\nimport styled from \"styled-components\";\nconst LogoWrapper = styled.div`\n  display: flex;\n  background-color: #fff;\n  border-bottom: 1px solid #f0f0f0;\n  height: 68px;\n  line-height: 1.5em;\n  margin-bottom: 20px;\n`;\nconst LogoParagraph = styled.p`\n  color: #fa6868;\n  font-family: monospace;\n  font-size: 22px;\n  padding-top: 18px;\n  padding-left: 10px;\n`;\n\nexport default function index() {\n  return (\n    <LogoWrapper>\n      <Logo />\n      <LogoParagraph>ゼミプロジェクト</LogoParagraph>\n    </LogoWrapper>\n  );\n}\n","import React, { useEffect, useState, FC } from \"react\";\nimport Card from \"../../Organisms/Cards\";\nimport Post from \"../../Organisms/PostModal\";\nimport MoreButton from \"../../Atoms/MoreButton\";\nimport { Row, Col } from \"antd\";\nimport styled from \"styled-components\";\nimport Header from \"../../Organisms/Header\";\nimport firebase from \"../../../firebase\";\nimport { firebasePostContents } from \"../../Organisms/PostModal\";\nimport { Link } from \"react-router-dom\";\nimport MediaQuery from \"react-responsive\";\ntype boardsList = {\n  boardIds: string;\n  contentList: firebasePostContents;\n};\nexport const HomeDiv = styled.div`\n  background-color: #fff;\n  width: 1000px;\n  margin-top: 50px;\n  margin: 0 auto;\n  padding: 50px 0;\n`;\nconst ButtonWrapper = styled.div`\n  text-align: center;\n  width: 600px;\n  margin-top: 24px;\n`;\nconst SpButtonWrapper = styled.div`\n  text-align: center;\n  margin-top: 24px;\n`;\n\nconst Index: FC = () => {\n  const [bords, setBoards] = useState<firebase.firestore.DocumentData>([]);\n  const [\n    sliceBoards,\n    setSliceBoards,\n  ] = useState<firebase.firestore.DocumentData>([]);\n  let sliceBoardsArray: firebase.firestore.DocumentData = [];\n  useEffect(() => {\n    const db = firebase.firestore();\n    const ref = db.collection(\"board\");\n    ref.orderBy(\"createdAt\", \"desc\").onSnapshot((boards) => {\n      let boardContents: firebase.firestore.DocumentData = [];\n\n      boards.forEach((contents) => {\n        boardContents.push({\n          boardIds: contents.id,\n          contentList: contents.data(),\n        });\n      });\n      setBoards(boardContents);\n      if (boardContents.length > 0) {\n        sliceBoardsArray = boardContents.slice(0, 5);\n        setSliceBoards(sliceBoardsArray);\n      }\n    });\n  }, []);\n\n  const handleMore = () => {\n    sliceBoardsArray = bords;\n    setSliceBoards(sliceBoardsArray);\n  };\n\n  return (\n    <>\n      <Header />\n      <MediaQuery minDeviceWidth={768}>\n        <HomeDiv>\n          <Row>\n            <Col span={8}>\n              <Post />\n            </Col>\n            <Col span={16}>\n              {sliceBoards.length > 0 &&\n                sliceBoards.map((boardFields: boardsList) => (\n                  <div key={boardFields.boardIds}>\n                    <Link to={`/home/${boardFields.boardIds}`}>\n                      <Card\n                        title={boardFields.contentList.title}\n                        body={boardFields.contentList.body}\n                      />\n                    </Link>\n                  </div>\n                ))}\n\n              <ButtonWrapper onClick={handleMore}>\n                {sliceBoards && sliceBoards.length < 6 && <MoreButton />}\n              </ButtonWrapper>\n            </Col>\n          </Row>\n        </HomeDiv>\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={767}>\n        <Row>\n          <Col span={24}>\n            <Post />\n            {sliceBoards.length > 0 &&\n              sliceBoards.map((boardFields: boardsList) => (\n                <div key={boardFields.boardIds}>\n                  <Link to={`/home/${boardFields.boardIds}`}>\n                    <Card\n                      title={boardFields.contentList.title}\n                      body={boardFields.contentList.body}\n                    />\n                  </Link>\n                </div>\n              ))}\n\n            <SpButtonWrapper onClick={handleMore}>\n              {sliceBoards && sliceBoards.length < 6 && <MoreButton />}\n            </SpButtonWrapper>\n          </Col>\n        </Row>\n      </MediaQuery>\n    </>\n  );\n};\n\nexport default Index;\n","import React, { FC } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Card } from \"antd\";\nimport styled from \"styled-components\";\nimport firebase from \"../../../firebase\";\nimport MediaQuery from \"react-responsive\";\nconst Name = styled.p`\n  color: #fa6868;\n  font-size: 105%;\n`;\nconst Time = styled.p`\n  font-size: 11px;\n  color: #999;\n`;\n\nconst Body = styled.p``;\ntype Props = {\n  name: string;\n  body: string;\n  time: firebase.firestore.Timestamp;\n};\n\nconst Index: FC<Props> = ({ body, name, time }) => {\n  const CurrentYear = time.toDate().getFullYear();\n  const CurrentMonth = time.toDate().getMonth() + 1;\n  const CurrentDay = time.toDate().getDay() + 22;\n  return (\n    <>\n      <MediaQuery minDeviceWidth={768}>\n        <Card\n          style={{\n            width: 650,\n            margin: \"0 auto\",\n            marginTop: \"20px\",\n            padding: \"20px\",\n            border: \"1px solid #d2d1d1\",\n          }}\n        >\n          <Name>{name}</Name>\n          <Time>{`\b${CurrentYear}年${CurrentMonth}月${CurrentDay}日`}</Time>\n          <Body>{body}</Body>\n        </Card>\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={767}>\n        <Card\n          style={{\n            width: \"100%\",\n            margin: \"0 auto\",\n            marginTop: \"20px\",\n            padding: \"20px\",\n            border: \"1px solid #d2d1d1\",\n          }}\n        >\n          <Name>{name}</Name>\n          <Time>{`\b${CurrentYear}年${CurrentMonth}月${CurrentDay}日`}</Time>\n          <Body>{body}</Body>\n        </Card>\n      </MediaQuery>\n    </>\n  );\n};\nexport default Index;\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { SendOutlined } from \"@ant-design/icons\";\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  border-bottom: 1px solid #f78789;\n  vertical-align: bottom;\n  text-decoration: none;\n  color: #f78789;\n  background-size: 16px 16px;\n  margin-right: 14px;\n`;\nconst Replay = styled.a`\n  text-decoration: none;\n  color: #f78789;\n`;\ntype Props = {\n  onClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n};\nconst Index: FC<Props> = (props) => {\n  return (\n    <Wrapper onClick={props.onClick}>\n      <Replay>\n        <SendOutlined />\n        回答する\n      </Replay>\n    </Wrapper>\n  );\n};\n\nexport default Index;\n","import React, { useState, FC } from \"react\";\nimport { Modal, Input, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport Reply from \"../../Atoms/Reply\";\nimport firebase from \"../../../firebase\";\nimport MediaQuery from \"react-responsive\";\nexport type firebasePostContents = {\n  name: string;\n  body: string;\n  createdAt: firebase.firestore.Timestamp;\n};\n\ntype props = {\n  boardId: string;\n};\nconst Wrapper = styled.div`\n  text-align: right;\n  margin-right: 14px;\n`;\n\nconst Index: FC<props> = (props) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const { TextArea } = Input;\n  const db = firebase.firestore();\n  const boardId = props.boardId;\n  const ref = db.collection(\"board\");\n  console.log(ref);\n  console.log(boardId);\n  const H3 = styled.h3``;\n  const doReply = () => {\n    setModalVisible(true);\n  };\n\n  const handleOk = () => {\n    const boardContents: firebasePostContents = {\n      name,\n      body,\n      createdAt: firebase.firestore.Timestamp.now(),\n    };\n    if (name && body) {\n      ref.doc(boardId).collection(\"reply\").add(boardContents);\n      setModalVisible(false);\n    } else {\n      alert(\"文字を入力してください\");\n    }\n  };\n  return (\n    <Wrapper>\n      <MediaQuery minDeviceWidth={768}>\n        <Reply onClick={doReply} />\n        <Modal\n          title=\"質問に回答する\"\n          visible={modalVisible}\n          onCancel={() => setModalVisible(false)}\n          width=\"40%\"\n          footer={[\n            <Button key=\"back\" onClick={() => setModalVisible(false)}>\n              キャンセル\n            </Button>,\n            <Button key=\"submit\" type=\"default\" onClick={handleOk}>\n              投稿する\n            </Button>,\n          ]}\n        >\n          <H3>名前</H3>\n          <Input\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"名前\"\n            required\n          />\n          <H3>回答する</H3>\n          <TextArea\n            onChange={(e) => setBody(e.target.value)}\n            placeholder=\"回答するぜ\"\n            required\n            rows={4}\n          />\n        </Modal>\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={767}>\n        <Reply onClick={doReply} />\n        <Modal\n          title=\"質問に回答する\"\n          visible={modalVisible}\n          onCancel={() => setModalVisible(false)}\n          width=\"80%\"\n          footer={[\n            <Button key=\"back\" onClick={() => setModalVisible(false)}>\n              キャンセル\n            </Button>,\n            <Button key=\"submit\" type=\"default\" onClick={handleOk}>\n              投稿する\n            </Button>,\n          ]}\n        >\n          <H3>名前</H3>\n          <Input\n            onChange={(e) => setName(e.target.value)}\n            placeholder=\"名前\"\n            required\n          />\n          <H3>回答する</H3>\n          <TextArea\n            onChange={(e) => setBody(e.target.value)}\n            placeholder=\"回答するぜ\"\n            required\n            rows={4}\n          />\n        </Modal>\n      </MediaQuery>\n    </Wrapper>\n  );\n};\nexport default Index;\n","import React, { FC } from \"react\";\nimport { Card } from \"antd\";\nimport styled from \"styled-components\";\nimport MediaQuery from \"react-responsive\";\nconst Wrapper = styled.div``;\nconst Title = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  text-align: center;\n`;\nconst Name = styled.p`\n  color: #fa6868;\n  font-size: 105%;\n`;\n\nconst Body = styled.p``;\n\nexport type ReplyFields = {\n  name: string;\n  body: string;\n};\nconst Index: FC<ReplyFields> = ({ name, body }) => {\n  return (\n    <Wrapper>\n      <MediaQuery minDeviceWidth={768}>\n        <Card\n          style={{\n            width: 650,\n            margin: \"0 auto\",\n            padding: \"20px\",\n            border: \"1px solid rgb(210, 209, 209)\",\n          }}\n        >\n          <Body>{body}</Body>\n          <Name>{name}</Name>\n        </Card>\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={767}>\n        <Card\n          style={{\n            width: \"100%\",\n            margin: \"0 auto\",\n            padding: \"20px\",\n            border: \"1px solid rgb(210, 209, 209)\",\n          }}\n        >\n          <Body>{body}</Body>\n          <Name>{name}</Name>\n        </Card>\n      </MediaQuery>\n    </Wrapper>\n  );\n};\nexport default Index;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"../../Organisms/Header\";\nimport firebase from \"../../../firebase\";\nimport HomeDetailCard from \"../../Organisms/HomeDetailCards\";\nimport { Row, Col } from \"antd\";\nimport Reply from \"../../Organisms/ReplyModal\";\nimport { firebasePostContents } from \"../../Organisms/PostModal\";\nimport { HomeDiv } from \"../Home\";\nimport ReplyCards from \"../../Organisms/ReplyCards\";\nimport { ReplyFields } from \"../../Organisms/ReplyCards\";\nimport styled from \"styled-components\";\nimport MediaQuery from \"react-responsive\";\nconst HomeDetailCardWrapper = styled.div`\n  margin: 0 148px;\n`;\nconst SpHomeDetailCardWrapper = styled.div``;\nconst ReplyArea = styled.h2`\nbackground-color: #e7e7e7;\n  border:1px solid #e7e7e7\n  color: #676767;\n  font-weight: bold;\n  padding: 10px;\n  font-size: 13px;\n  width:65%;\n  margin: 0 auto;\n  margin-top:24px;\n`;\nconst SpReplyArea = styled.h2`\nbackground-color: #e7e7e7;\n  border:1px solid #e7e7e7\n  color: #676767;\n  font-weight: bold;\n  padding: 10px;\n  font-size: 13px;\n  width:100%;\n  margin: 0 auto;\n  margin-top:24px;\n`;\ntype boardsList = {\n  contentList: firebasePostContents;\n};\nexport default function Index(props: any) {\n  const [bords, setBoards] = useState<firebase.firestore.DocumentData>([]);\n  const [replys, setReplys] = useState<firebase.firestore.DocumentData>([]);\n  const boardId = props.match.params.boardId;\n  const db = firebase.firestore();\n  const ref = db.collection(\"board\");\n  useEffect(() => {\n    let doBoardArray: firebase.firestore.DocumentData = [];\n    ref\n      .doc(boardId)\n      .onSnapshot(async (boards: firebase.firestore.DocumentData) => {\n        await doBoardArray.push({ contentList: boards.data() });\n        setBoards(doBoardArray);\n      });\n  }, [props.match.params.boardId]);\n\n  useEffect(() => {\n    let doReplyArray: firebase.firestore.DocumentData = [];\n    ref\n      .doc(boardId)\n      .collection(\"reply\")\n      .orderBy(\"createdAt\", \"asc\")\n      .onSnapshot((res) => {\n        res.forEach(async (reply) => {\n          await doReplyArray.push(reply.data());\n        });\n        setReplys(doReplyArray);\n      });\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <MediaQuery minDeviceWidth={768}>\n        <HomeDiv>\n          <Row>\n            <Col span={24} style={{ backgroundColor: \"#ffff\" }}>\n              {bords &&\n                bords.map((boardFields: boardsList) => (\n                  <HomeDetailCardWrapper key={boardFields.contentList.name}>\n                    <HomeDetailCard\n                      name={boardFields.contentList.name}\n                      time={boardFields.contentList.createdAt}\n                      body={boardFields.contentList.body}\n                    />\n                    <Reply boardId={boardId} />\n                  </HomeDetailCardWrapper>\n                ))}\n              <div>\n                <ReplyArea>回答</ReplyArea>\n                {replys.length ? (\n                  replys.map((replyFields: ReplyFields) => (\n                    <ReplyCards\n                      name={replyFields.name}\n                      body={replyFields.body}\n                    />\n                  ))\n                ) : (\n                  // todo 返信がない場合の処理を書く\n                  <p>回答はまだありません</p>\n                )}\n              </div>\n            </Col>\n          </Row>\n        </HomeDiv>\n      </MediaQuery>\n      <MediaQuery maxDeviceWidth={767}>\n        <Row>\n          <Col span={24} style={{ backgroundColor: \"#ffff\" }}>\n            {bords &&\n              bords.map((boardFields: boardsList) => (\n                <SpHomeDetailCardWrapper key={boardFields.contentList.name}>\n                  <HomeDetailCard\n                    name={boardFields.contentList.name}\n                    time={boardFields.contentList.createdAt}\n                    body={boardFields.contentList.body}\n                  />\n                  <Reply boardId={boardId} />\n                </SpHomeDetailCardWrapper>\n              ))}\n            <div>\n              <SpReplyArea>回答</SpReplyArea>\n              {replys.length ? (\n                replys.map((replyFields: ReplyFields) => (\n                  <ReplyCards name={replyFields.name} body={replyFields.body} />\n                ))\n              ) : (\n                // todo 返信がない場合の処理を書く\n                <p>回答はまだありません</p>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </MediaQuery>\n    </>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./components/Pages/Home\";\nimport HomeDetailPage from \"./components/Pages/HomeDetailPage\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst Index = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/home/:boardId\" component={HomeDetailPage} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Index;\nreportWebVitals();\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}